name: Test Workflow

on:
  push:
    branches:
      - automate-workflow
jobs:
  build-and-publish:
    name: Test Workflow
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Fetch version
        run: |
          output="$(python setup.py --version)"
          echo "::set-output name=version::$output"
        id: setup_version
      - name: Print build version
        run: echo "${{ steps.setup_version.outputs.version }}"

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Build a binary wheel and a source tarball
        run: |
          pipenv run build
      # git tag created using version specified in setup.py
      - name: Bump git tag version
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.setup_version.outputs.version }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ github.event.head_commit.message }}

#      - name: Publish distribution ðŸ“¦ to Test PyPI
#        run: |
#          pipenv run build
#          pipenv run deploy --verbose
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
#          TWINE_REPOSITORY: testpypi


#      - name: Publish distribution ðŸ“¦ to PyPI
#        run: |
#          pipenv run build
#          pipenv run deploy
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}